name: Falcon
on:
  push:
    branches:
      - main
      - develop
    tags:
      # Run when pushing release candidate tags
      - '[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+'
  pull_request:
    branches:
      - main
      - develop
jobs:
  setup_workspace:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Workspace
        uses: ./.github/actions/setup-node-workspace
  build:
    needs: setup_workspace
    runs-on: ubuntu-latest
    timeout-minutes: 15
    # These permissions are needed to interact with GitHub's OIDC Token endpoint
    # and update commit status
    permissions:
      id-token: write
      contents: read
      statuses: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Workspace (From Cache)
        uses: ./.github/actions/setup-node-workspace
      - name: Build
        run: npm run build --if-present
      - name: Persist Build Assets Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build
          retention-days: 1
  deploy_dev:
    if: github.ref == 'refs/heads/develop'
    needs:
      - build
    environment:
      name: Development
      url: 'https://michaelcclayton.com?environment=dev'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Build Assets Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: build/
      - name: Mock Deploy
        shell: bash
        run: echo "Mock deploy to development complete!"
  deploy_production:
    if: github.ref == 'refs/heads/main'
    needs:
      - build
    environment:
      name: Production
      url: 'https://michaelcclayton.com?environment=production'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download Build Assets Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: build/
      - name: Mock Deploy
        shell: bash
        run: echo "Mock deploy to production complete!"
