name: CI+CD
on:
  push:
    branches:
      - main
      - develop
    tags:
      # Run when pushing release candidate tags
      - '[0-9]+\.[0-9]+\.[0-9]+-rc\.[0-9]+'
  pull_request:
    branches:
      - main
      - develop
jobs:
  setup_workspace:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Workspace
        uses: ./.github/actions/setup-node-workspace
  build:
    needs: setup_workspace
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: TEST ENV VAR
        shell: bash
        run: |
          echo "TEST ENV VAR"
          echo "${{ env.REACT_APP_WELCOME_MESSAGE }}"
        env:
          REACT_APP_WELCOME_MESSAGE: ${{ secrets.REACT_APP_WELCOME_MESSAGE }}
      - name: Setup Workspace (From Cache)
        uses: ./.github/actions/setup-node-workspace
      - name: Build
        run: npm run build --if-present
        env:
          REACT_APP_WELCOME_MESSAGE: ${{ secrets.REACT_APP_WELCOME_MESSAGE }}
      - name: Persist Build Assets Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-artifact
          path: build
          retention-days: 1
  deployment_info:
    needs: setup_workspace
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      deployment_env: ${{ steps.deployment_info.outputs.deployment_env }}
      deployment_url: ${{ steps.deployment_info.outputs.deployment_url }}
      iam_role: ${{ steps.deployment_info.outputs.iam_role }}
      s3_bucket: ${{ steps.deployment_info.outputs.s3_bucket }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Extract Deployment Info
        id: deployment_info
        uses: ./.github/actions/deployment_info
  deploy:
    needs:
      - deployment_info
      - build
    if: ${{ needs.deployment_info.outputs.deployment_env == 'development' || needs.deployment_info.outputs.deployment_env == 'qa' || needs.deployment_info.outputs.deployment_env == 'production' }}
    runs-on: ubuntu-latest
    environment:
      name: ${{ needs.deployment_info.outputs.deployment_env }}
      url: ${{ needs.deployment_info.outputs.deployment_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          bucket-name: ${{ needs.deployment_info.outputs.s3_bucket }}
          iam-role: ${{ needs.deployment_info.outputs.iam_role }}
          # TODO: Need to create a new one for github?
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
  deploy_preview:
    needs:
      - deployment_info
      - build
    if: ${{ needs.deployment_info.outputs.deployment_env == 'preview' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          bucket-name: ${{ needs.deployment_info.outputs.s3_bucket }}
          iam-role: ${{ needs.deployment_info.outputs.iam_role }}
          # TODO: Need to create a new one for github?
          sentry-auth-token: ${{ secrets.SENTRY_AUTH_TOKEN }}
          is-preview: true
